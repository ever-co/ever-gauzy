{
	"name": "ever-gauzy",
	"version": "0.1.0",
	"description": "Ever Gauzy - Business Management Platform (ERP/CRM/HRM)",
	"license": "AGPL-3.0",
	"homepage": "https://gauzy.co",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ever-co/gauzy.git"
	},
	"bugs": {
		"url": "https://github.com/ever-co/gauzy/issues"
	},
	"private": true,
	"author": {
		"name": "Ever Co. LTD",
		"email": "ever@ever.co",
		"url": "https://ever.co"
	},
	"scripts": {
		"prepare:husky": "npx husky install .husky",
		"ng": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn nx",
		"ng:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn nx",
		"ng:ci": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=7000 yarn nx",
		"config": "yarn ts-node ./.scripts/configure.ts",
		"config:dev": "yarn run config -- --environment=dev",
		"config:prod": "yarn run config -- --environment=prod",
		"start": "yarn build:package:all && yarn concurrently --raw --kill-others \"yarn start:api\" \"yarn start:gauzy\"",
		"start:prod": "yarn build:package:all && yarn concurrently --raw --kill-others \"yarn start:api:prod\" \"yarn start:gauzy:prod\"",
		"start:gauzy": "yarn run postinstall.web && yarn run config:dev && yarn ng serve gauzy",
		"start:gauzy:pm2": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn build:package:all && yarn build:gauzy && yarn ts-node ./apps/gauzy/src/pm2bootstrap.ts",
		"start:gauzy:prod": "yarn run config:prod && yarn ng serve gauzy --disable-host-check --host 0.0.0.0 -c=production --prod",
		"start:api": "yarn ng serve api",
		"start:api:prod": "yarn ng:prod serve api --host 0.0.0.0 -c=production --prod",
		"start:api:ci": "yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci serve api -c=production --prod",
		"start:api:pm2": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn run build:api && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/pm2bootstrap.ts",
		"seed": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed.ts",
		"seed:ever": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-ever.ts",
		"seed:all": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-all.ts",
		"seed:jobs": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-jobs.ts",
		"seed:module": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-module.ts --name",
		"seed:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=7000 yarn build:package:all && yarn run config:prod && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed.ts",
		"bootstrap": "yarn install && yarn lerna bootstrap",
		"prebuild": "rimraf dist coverage",
		"build": "yarn build:package:all && concurrently --raw \"yarn build:api\" \"yarn build:gauzy\"",
		"build:lerna": "yarn lerna run --parallel build",
		"build:prod": "yarn build:package:all && concurrently --raw \"yarn build:api:prod\" \"yarn build:gauzy:prod\"",
		"build:gauzy": "yarn run postinstall.web && yarn run config:dev && yarn ng build gauzy",
		"build:gauzy:prod": "yarn run config:prod && yarn ng:prod build gauzy -c=production --prod",
		"build:gauzy:prod:ci": "yarn run config:prod && yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci build gauzy -c=production --prod",
		"build:api": "yarn ng build api",
		"build:api:prod": "yarn ng:prod build api -c=production --prod",
		"build:api:prod:ci": "yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci build api -c=production --prod",
		"bundle-report": "yarn run config:prod && yarn ng:prod build -c=production --stats-json && webpack-bundle-analyzer dist/apps/gauzy/stats.json",
		"commit": "git-cz",
		"commit:lint": "commitlint -E HUSKY_GIT_PARAMS",
		"semantic-release": "semantic-release",
		"test": "yarn run postinstall.web && yarn run config:dev && yarn ng test",
		"lint": "yarn run config:dev && yarn ng lint && yarn ng lint",
		"e2e": "yarn run postinstall.web && yarn run config:dev && yarn ng e2e",
		"e2e:ci": "yarn run postinstall.web && yarn run config:prod && yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci e2e -c=production --prod --headless",
		"affected:apps": "yarn nx affected:apps",
		"affected:libs": "yarn nx affected:libs",
		"affected:build": "yarn nx affected:build",
		"affected:e2e": "yarn nx affected:e2e",
		"affected:test": "yarn nx affected:test",
		"affected:lint": "yarn nx affected:lint",
		"affected:dep-graph": "yarn nx affected:dep-graph",
		"affected": "yarn nx affected",
		"format": "yarn nx format:write",
		"format:write": "yarn nx format:write",
		"format:check": "yarn nx format:check",
		"update": "yarn ng update @nrwl/workspace",
		"update:check": "yarn ng update",
		"workspace-schematic": "yarn nx workspace-schematic",
		"dep-graph": "yarn nx dep-graph",
		"help": "yarn nx help",
		"doc:build": "compodoc -p tsconfig.json -d dist/docs",
		"doc:serve": "compodoc -s -d dist/docs",
		"doc:build-serve": "compodoc -p tsconfig.json -d docs -s",
		"postinstall.electron": "yarn electron-builder install-app-deps && yarn node tools/electron/postinstall",
		"postinstall.web": "yarn node ./decorate-angular-cli.js && yarn npx ngcc --properties es2016 browser module main --first-only --create-ivy-entry-points && yarn node tools/web/postinstall",
		"build:desktop": "yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:desktop:prod && yarn ng:prod build desktop --prod --base-href ./ && yarn run prepare:desktop && yarn ng:prod build desktop-api --prod && yarn ng:prod build api-desktop --prod && yarn ng:prod build desktop-ui --prod --base-href ./ && yarn run copy-files-desktop && yarn run copy-assets-gauzy",
		"build:desktop:local": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop && electron dist/apps/desktop",
		"build:desktop:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --linux --project dist/apps/desktop",
		"build:desktop:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/desktop",
		"build:desktop:mac": "yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --project dist/apps/desktop",
		"build:desktop:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --linux --publish=always --project dist/apps/desktop",
		"build:desktop:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop",
		"build:desktop:mac:release": "yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --publish=always --project dist/apps/desktop",
		"prepare:desktop": "yarn run postinstall.electron && tsc -p apps/desktop/tsconfig.json",
		"serve:desktop.target": "yarn ng serve desktop",
		"serve:desktop": "wait-on http-get://localhost:4200/ && electron apps/desktop/src --serve",
		"start:desktop": "yarn run prepare:desktop && npm-run-all -p serve.electron.gauzy-desktop.target serve.electron.gauzy-desktop",
		"build:desktop:mac:quick": "npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --project dist/apps/desktop",
		"build:desktop:local:quick": "yarn electron dist/apps/desktop --prod",
		"build:desktop:windows:quick": "npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --windows --project dist/apps/desktop",
		"build:sqlite:mac": "cd node_modules/sqlite3 && HOME=~/.electron-gyp node-pre-gyp rebuild --target=8.3.0 --arch=x64 --dist-url=https://electronjs.org/headers",
		"build:sqlite:windows": "cd node_modules/sqlite3 && cross-env HOME=~/.electron-gyp node-pre-gyp rebuild --target=8.3.0 --arch=x64 --target_platform=win32 --dist-url=https://electronjs.org/headers",
		"debug:desktop:app:mac": "lldb ./dist/apps/desktop-packages/mac/GauzyDesktop.app && run",
		"start:desktop:ui": "yarn run postinstall.web && yarn ng serve desktop-ui",
		"build:desktop:ui": "yarn run postinstall.web && yarn ng:prod build desktop-ui --prod --base-href ./",
		"prepare:desktop:dev": "yarn run postinstall.electron && tsc -p apps/desktop/tsconfig.dev.json",
		"start:api:desktop": "yarn ng serve api-desktop",
		"deploy:desktop:mac": "npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --publish always --project dist/apps/desktop",
		"build:package:auth": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/auth build",
		"build:package:core": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/core build",
		"build:package:common": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/common build",
		"build:package:common-angular": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/common-angular build",
		"build:package:contracts": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/contracts build",
		"build:package:config": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/config build",
		"build:package:plugin": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugin build",
		"build:package:plugins": "yarn run build:package:plugin:integration-ai && yarn run build:package:plugin:integration-hubstaff && yarn run build:package:plugin:integration-upwork && yarn run build:package:plugin:product-reviews",
		"build:package:plugin:integration-ai": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/integration-ai build",
		"build:package:plugin:integration-hubstaff": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/integration-hubstaff build",
		"build:package:plugin:integration-upwork": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/integration-upwork build",
		"build:package:plugin:product-reviews": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/product-reviews build",
		"build:package:plugin:knowledge-base": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/knowledge-base build",
		"build:package:plugin:changelog": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/changelog build",
		"build:package:plugin:integration-wakatime": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/plugins/integration-wakatime build",
		"build:package:all": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:common-angular && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:plugins && yarn run build:package:auth && yarn run build:package:core && yarn run build:package:plugin:knowledge-base && yarn run build:package:plugin:changelog && yarn build:package:desktop-libs && yarn build:package:plugin:integration-wakatime && yarn ng build desktop-ui-lib",
		"build:package:desktop-window": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/desktop-window build",
		"build:package:desktop-libs": "yarn run build:package:desktop-window && cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/desktop-libs build",
		"build:package:api": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:plugins && yarn run build:package:auth && yarn run build:package:core && yarn run build:package:plugin:knowledge-base && yarn run build:package:plugin:changelog",
		"build:package:gauzy": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:common-angular && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:plugins && yarn run build:package:auth && yarn run build:package:core && yarn run build:package:plugin:knowledge-base && yarn run build:package:plugin:changelog",
		"build:package:desktop-ui-lib": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn --cwd ./packages/desktop-ui-lib build",
		"copy-files-desktop": "copyfiles -f  packages/core/src/**/*.gql dist/apps/desktop/data/",
		"build:desktop-timer": "cross-env NODE_ENV=production yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:desktop-timer:prod && yarn ng build desktop-timer --prod --base-href ./ && yarn run prepare:desktop-timer && yarn ng build api-desktop --prod --output-path=dist/apps/desktop-timer/desktop-api && yarn run copy-assets-gauzy-timer",
		"prepare:desktop-timer": "yarn run postinstall.electron && tsc -p apps/desktop-timer/tsconfig.json",
		"build:desktop-timer:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --linux --project dist/apps/desktop-timer",
		"build:desktop-timer:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/desktop-timer",
		"build:desktop-timer:mac": "yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --project dist/apps/desktop-timer",
		"build:desktop-timer:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --linux --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=4096 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:mac:release": "yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=12.0.5 build --mac --publish=always --project dist/apps/desktop-timer",
		"copy-assets-gauzy": "copyfiles -f  apps/desktop/src/assets/snapshot-sound.wav dist/apps/desktop/data/sound/",
		"copy-assets-gauzy-timer": "copyfiles -f  apps/desktop/src/assets/snapshot-sound.wav dist/apps/desktop-timer/data/sound/",
		"config:electron": "yarn ts-node ./.scripts/electron.env.ts",
		"config:desktop:prod": "yarn run config:electron -- --environment=prod --desktop=desktop",
		"config:desktop-timer:prod": "yarn run config:electron -- --environment=prod --desktop=desktop-timer"
	},
	"config": {
		"commitizen": {
			"path": "cz-conventional-changelog"
		}
	},
	"commitlint": {
		"extends": [
			"@commitlint/config-conventional"
		]
	},
	"husky": {
		"hooks": {
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
			"pre-commit": "pretty-quick --no-verify --staged"
		}
	},
	"lint-staged": {},
	"release": {
		"verifyConditions": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git",
			"@semantic-release/github"
		],
		"prepare": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git"
		],
		"publish": [
			"@semantic-release/github"
		],
		"generateNotes": {
			"preset": "angular"
		},
		"npmPublish": false
	},
	"workspaces": {
		"packages": [
			"libs/*",
			"apps/*",
			"tools",
			"packages/*",
			"packages/plugins/*"
		],
		"nohoist": [
			"**/@types/jasmine",
			"**/@types/jasminewd2",
			"**/@angular*/**",
			"**/@ngtools/**"
		]
	},
	"resolutions": {
		"@angular-devkit/build-angular": "~0.1101.2",
		"@angular-devkit/architect": "~0.1101.2",
		"@angular-devkit/core": "^11.1.1"
	},
	"dependencies": {
		"@angular/common": "^11.1.1",
		"@angular/compiler": "^11.1.1",
		"@angular/core": "^11.1.1",
		"@angular/forms": "^11.1.1",
		"@angular/platform-browser": "^11.1.1",
		"@angular/platform-browser-dynamic": "^11.1.1",
		"@angular/router": "^11.1.1",
		"@angular/service-worker": "^11.1.1",
		"@angular/animations": "^11.1.1"
	},
	"devDependencies": {
		"@angular-devkit/architect": "^0.1101.2",
		"@angular-devkit/build-angular": "^0.1101.2",
		"@angular-devkit/core": "^11.1.1",
		"@angular-devkit/schematics": "^11.1.1",
		"@angular-eslint/eslint-plugin": "~1.0.0",
		"@angular-eslint/eslint-plugin-template": "~1.0.0",
		"@angular/cli": "^11.1.1",
		"@angular/compiler-cli": "^11.1.1",
		"@angular/language-service": "^11.1.1",
		"@commitlint/cli": "^11.0.0",
		"@commitlint/config-conventional": "^11.0.0",
		"@commitlint/config-lerna-scopes": "^11.0.0",
		"@commitlint/travis-cli": "^11.0.0",
		"@compodoc/compodoc": "^1.1.11",
		"@nrwl/angular": "^11.2.7",
		"@nrwl/cli": "11.2.7",
		"@nrwl/cypress": "^11.2.7",
		"@nrwl/eslint-plugin-nx": "11.2.7",
		"@nrwl/jest": "^11.2.7",
		"@nrwl/linter": "11.2.7",
		"@nrwl/nest": "^11.2.7",
		"@nrwl/node": "^11.2.7",
		"@nrwl/tao": "11.2.7",
		"@nrwl/workspace": "^11.2.7",
		"@nstudio/angular": "11.1.0",
		"@nstudio/electron": "11.1.0",
		"@nstudio/electron-angular": "11.1.0",
		"@nstudio/web": "11.1.0",
		"@nstudio/web-angular": "11.1.0",
		"@nstudio/xplat": "^11.1.0",
		"@semantic-release/changelog": "^5.0.1",
		"@semantic-release/git": "^9.0.0",
		"@semantic-release/github": "^7.2.1",
		"@semantic-release/npm": "^7.1.1",
		"@types/jest": "~25.1.4",
		"@types/yargs": "^15.0.9",
		"cloc": "^2.7.0",
		"codelyzer": "^6.0.1",
		"commitizen": "^4.2.1",
		"concurrently": "^5.3.0",
		"conventional-changelog": "^3.1.23",
		"conventional-changelog-cli": "^2.1.0",
		"cross-env": "^7.0.3",
		"cz-conventional-changelog": "^3.3.0",
		"dotenv": "^8.2.0",
		"electron": "12.0.5",
		"electron-builder": "^22.11.5",
		"envalid": "^6.0.2",
		"eslint-plugin-cypress": "^2.10.3",
		"fork-ts-checker-webpack-plugin": "^5.2.0",
		"husky": "^6.0.0",
		"jest": "26.2.2",
		"jest-jasmine2": "~25.2.0",
		"jest-preset-angular": "8.3.1",
		"lerna": "^4.0.0",
		"lerna-changelog": "^1.0.1",
		"lighthouse": "^6.3.0",
		"lint-staged": "^10.4.0",
		"ng-packagr": "^10.1.2",
		"npm-run-all": "^4.1.5",
		"prettier": "2.2.1",
		"prettier-tslint": "^0.4.2",
		"pretty-quick": "^3.1.0",
		"protractor": "^7.0.0",
		"rimraf": "^3.0.2",
		"rxjs-tslint": "0.1.5",
		"semantic-release": "^17.4.2",
		"snyk": "^1.573.0",
		"stylelint": "^13.7.2",
		"ts-jest": "^26.4.0",
		"ts-loader": "^8.0.4",
		"ts-node": "^9.1.1",
		"tsconfig-paths": "^3.9.0",
		"tslint": "^6.1.2",
		"tslint-config-prettier": "^1.18.0",
		"tslint-language-service": "^0.9.9",
		"typescript": "~4.1.3",
		"unleash": "^2.0.2",
		"webpack-bundle-analyzer": "^4.4.1",
		"yargs": "^16.2.0"
	},
	"engines": {
		"node": ">=14.0.0",
		"yarn": ">=1.13.0"
	},
	"snyk": true,
	"xplat": {
		"prefix": "gauzy",
		"framework": "angular"
	}
}
