{
	"name": "ever-gauzy",
	"version": "0.1.0",
	"description": "Ever Gauzy - Business Management Platform (ERP/CRM/HRM)",
	"license": "AGPL-3.0",
	"homepage": "https://gauzy.co",
	"repository": {
		"type": "git",
		"url": "https://github.com/ever-co/ever-gauzy.git"
	},
	"bugs": {
		"url": "https://github.com/ever-co/ever-gauzy/issues"
	},
	"private": true,
	"author": {
		"name": "Ever Co. LTD",
		"email": "ever@ever.co",
		"url": "https://ever.co"
	},
	"keywords": [],
	"scripts": {
		"prepare:husky": "npx husky install .husky",
		"ng": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn nx",
		"ng:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn nx",
		"ng:docker": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn nx",
		"ng:ci": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn nx",
		"config": "yarn ts-node ./.scripts/configure.ts",
		"config:dev": "yarn run config -- --environment=dev",
		"config:prod": "yarn run config -- --environment=prod",
		"start": "yarn build:package:all && yarn concurrently --raw --kill-others \"yarn start:api\" \"yarn start:gauzy\"",
		"start:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn concurrently --raw --kill-others \"yarn start:api:prod\" \"yarn start:gauzy:prod\"",
		"start:gauzy": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn run postinstall.web && yarn build:package:ui-config && yarn ng serve gauzy --open",
		"start:gauzy:forever": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn run config:dev && forever start node_modules/@angular/cli/bin/ng serve gauzy --disable-host-check --host 0.0.0.0",
		"start:gauzy:pm2": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn build:gauzy && yarn ts-node ./apps/gauzy/src/pm2bootstrap.ts",
		"start:gauzy:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn ng serve gauzy --configuration production --disable-host-check --host 0.0.0.0 --prod",
		"start:api": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn ng serve api",
		"start:api:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn ng:prod serve api --host 0.0.0.0 -c=production --prod",
		"start:api:ci": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci serve api -c=production --prod",
		"start:api:forever": "cross-env NODE_OPTIONS=--max-old-space-size=12288 forever start node_modules/@angular/cli/bin/ng serve api --host 0.0.0.0",
		"start:api:pm2": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn run build:api && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/pm2bootstrap.ts",
		"start:api:core": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/core start:api",
		"migration:run": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/migration.ts migration:run",
		"migration:revert": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/migration.ts migration:revert",
		"migration:generate": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/migration.ts migration:generate",
		"migration:create": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/migration.ts migration:create",
		"migration:command": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/core",
		"seed": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed.ts",
		"seed:ever": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-ever.ts",
		"seed:all": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-all.ts",
		"seed:jobs": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-jobs.ts",
		"seed:module": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:dev && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed-module.ts --name",
		"seed:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn build:package:all && yarn run config:prod && yarn ts-node -r tsconfig-paths/register --project apps/api/tsconfig.app.json ./apps/api/src/seed.ts",
		"bootstrap": "yarn install && yarn lerna bootstrap",
		"prebuild": "rimraf dist coverage",
		"build": "yarn build:package:all && concurrently --raw \"yarn build:api\" \"yarn build:gauzy\"",
		"build:lerna": "yarn lerna run --parallel build",
		"build:prod": "yarn build:package:all && concurrently --raw \"yarn build:api:prod\" \"yarn build:gauzy:prod\"",
		"build:gauzy": "yarn run postinstall.web && yarn run config:dev && yarn ng build gauzy",
		"build:gauzy:prod": "yarn run config:prod && yarn ng:prod build gauzy -c=production --prod --verbose",
		"build:gauzy:prod:docker": "yarn run config:prod && yarn ng:docker build gauzy -c=production --prod --verbose",
		"build:gauzy:prod:ci": "yarn run config:prod && yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci build gauzy -c=production --prod --verbose",
		"build:api": "yarn ng build api",
		"build:api:prod": "yarn ng:prod build api -c=production --prod",
		"build:api:prod:docker": "yarn ng:docker build api -c=production --prod",
		"build:api:prod:ci": "yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci build api -c=production --prod",
		"bundle-report": "yarn run config:prod && yarn ng:prod build -c=production --stats-json && webpack-bundle-analyzer dist/apps/gauzy/stats.json",
		"commit": "git-cz",
		"commit:lint": "commitlint -E HUSKY_GIT_PARAMS",
		"semantic-release": "semantic-release",
		"test": "yarn run postinstall.web && yarn run config:dev && yarn ng test",
		"lint": "yarn run config:dev && yarn ng lint && yarn ng lint",
		"e2e": "yarn run postinstall.web && yarn run config:dev && yarn ng e2e --browser chrome",
		"e2e:ci": "yarn run postinstall.web && yarn run config:prod && yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci e2e -c=production --prod --headless",
		"affected:apps": "yarn nx affected:apps",
		"affected:libs": "yarn nx affected:libs",
		"affected:build": "yarn nx affected:build",
		"affected:e2e": "yarn nx affected:e2e",
		"affected:test": "yarn nx affected:test",
		"affected:lint": "yarn nx affected:lint",
		"affected:dep-graph": "yarn nx affected:dep-graph",
		"affected": "yarn nx affected",
		"format": "yarn nx format:write",
		"format:write": "yarn nx format:write",
		"format:check": "yarn nx format:check",
		"update": "yarn ng update @nrwl/workspace",
		"update:check": "yarn ng update",
		"workspace-schematic": "yarn nx workspace-schematic",
		"dep-graph": "yarn nx dep-graph",
		"help": "yarn nx help",
		"doc:build": "compodoc -p tsconfig.json -d dist/docs",
		"doc:serve": "compodoc -s -d dist/docs",
		"doc:build-serve": "compodoc -p tsconfig.json -d docs -s",
		"postinstall.electron": "yarn electron-builder install-app-deps && yarn node tools/electron/postinstall",
		"postinstall.web": "yarn node ./decorate-angular-cli.js && yarn node tools/web/postinstall",
		"build:desktop": "cross-env NODE_ENV=production yarn run copy-files-i18n-desktop && yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:desktop:prod && yarn run pack:desktop && yarn run generate:icons:desktop --environment=prod && yarn ng:prod build desktop --prod --base-href ./ && yarn run prepare:desktop && yarn ng:prod build desktop-api --prod && yarn ng:prod build api-desktop --prod --output-path=dist/apps/desktop/desktop-api && yarn ng:prod build desktop-ui --prod --base-href ./ && yarn run copy-files-desktop && yarn run copy-assets-gauzy",
		"build:desktop:local": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop && electron dist/apps/desktop",
		"build:desktop:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --project dist/apps/desktop",
		"build:desktop:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/desktop",
		"build:desktop:mac": "yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --project dist/apps/desktop",
		"build:desktop:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/desktop",
		"build:desktop:linux:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/desktop",
		"build:desktop:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop",
		"build:desktop:windows:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop",
		"build:desktop:mac:release": "yarn run build:desktop && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --publish=always --project dist/apps/desktop",
		"prepare:desktop": "yarn run postinstall.electron && tsc -p apps/desktop/tsconfig.json",
		"serve:desktop.target": "yarn ng serve desktop",
		"serve:desktop": "wait-on http-get://localhost:4200/ && electron apps/desktop/src --serve",
		"start:desktop": "yarn run prepare:desktop && npm-run-all -p serve.electron.gauzy-desktop.target serve.electron.gauzy-desktop",
		"build:desktop:mac:quick": "npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --project dist/apps/desktop",
		"build:desktop:local:quick": "yarn electron dist/apps/desktop --prod",
		"build:desktop:windows:quick": "npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --windows --project dist/apps/desktop",
		"debug:desktop:app:mac": "lldb ./dist/apps/desktop-packages/mac/GauzyDesktop.app && run",
		"start:desktop:ui": "yarn run postinstall.web && yarn ng serve desktop-ui",
		"build:desktop:ui": "yarn run postinstall.web && yarn ng:prod build desktop-ui --prod --base-href ./",
		"prepare:desktop:dev": "yarn run postinstall.electron && tsc -p apps/desktop/tsconfig.dev.json",
		"start:api:desktop": "yarn ng serve api-desktop",
		"deploy:desktop:mac": "npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --publish always --project dist/apps/desktop",
		"build:package:ui-auth": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/ui-auth lib:build",
		"build:package:ui-auth:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/ui-auth lib:build:prod",
		"build:package:ui-core": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/ui-core lib:build",
		"build:package:ui-core:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/ui-core lib:build:prod",
		"build:package:ui-config": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 && yarn run config:dev && yarn --cwd ./packages/ui-config lib:build",
		"build:package:ui-config:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn --cwd ./packages/ui-config lib:build:prod",
		"build:package:auth": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/auth build",
		"build:package:auth:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/auth build:prod",
		"build:package:core": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/core build",
		"build:package:core:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/core build:prod",
		"build:package:common": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/common build",
		"build:package:common:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/common build:prod",
		"build:package:common-angular": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/common-angular build",
		"build:package:common-angular:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/common-angular build:prod",
		"build:package:contracts": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/contracts build",
		"build:package:contracts:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/contracts build:prod",
		"build:package:config": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/config build",
		"build:package:config:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/config build:prod",
		"build:package:plugin": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugin build",
		"build:package:plugin:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugin build",
		"build:package:plugins:pre": "yarn run build:package:ui-config && yarn run build:package:ui-core && yarn run build:package:ui-auth && yarn run build:package:plugin:onboarding-ui && yarn run build:package:plugin:legal-ui && yarn run build:package:plugin:job-search-ui && yarn run build:package:plugin:job-matching-ui && yarn run build:package:plugin:job-employee-ui && yarn run build:package:plugin:job-proposal-ui && yarn run build:package:plugin:public-layout-ui && yarn run build:package:plugin:maintenance-ui && yarn run build:integration-ui-plugins",
		"build:package:plugins:pre:prod": "yarn run build:package:ui-config:prod && yarn run build:package:ui-core:prod && yarn run build:package:ui-auth:prod && yarn run build:package:plugin:onboarding-ui:prod && yarn run build:package:plugin:legal-ui:prod && yarn run build:package:plugin:job-search-ui:prod && yarn run build:package:plugin:job-matching-ui:prod && yarn run build:package:plugin:job-employee-ui:prod && yarn run build:package:plugin:job-proposal-ui:prod && yarn run build:package:plugin:public-layout-ui:prod && yarn run build:package:plugin:maintenance-ui:prod && yarn run build:integration-ui-plugins:prod",
		"build:package:plugins:post": "yarn run build:package:plugin:integration-jira && yarn run build:package:plugin:integration-ai && yarn run build:package:plugin:sentry && yarn run build:package:plugin:jitsu-analytic && yarn run build:package:plugin:product-reviews && yarn run build:package:plugin:job-search && yarn run build:package:plugin:job-proposal && yarn run build:package:plugin:integration-github && yarn run build:package:plugin:knowledge-base && yarn run build:package:plugin:changelog && yarn run build:package:plugin:integration-hubstaff && yarn run build:package:plugin:integration-upwork",
		"build:package:plugins:post:prod": "yarn run build:package:plugin:integration-jira:prod && yarn run build:package:plugin:integration-ai:prod && yarn run build:package:plugin:sentry:prod && yarn run build:package:plugin:jitsu-analytic:prod && yarn run build:package:plugin:product-reviews:prod && yarn run build:package:plugin:job-search:prod && yarn run build:package:plugin:job-proposal:prod && yarn run build:package:plugin:integration-github:prod && yarn run build:package:plugin:knowledge-base:prod && yarn run build:package:plugin:changelog:prod && yarn run build:package:plugin:integration-hubstaff:prod && yarn run build:package:plugin:integration-upwork:prod",
		"build:package:plugin:integration-ai": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-ai build",
		"build:package:plugin:integration-ai:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-ai build",
		"build:package:plugin:integration-hubstaff": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-hubstaff build",
		"build:package:plugin:integration-hubstaff:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-hubstaff build:prod",
		"build:package:plugin:integration-upwork": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-upwork build",
		"build:package:plugin:integration-upwork:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-upwork build:prod",
		"build:package:plugin:integration-github": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-github build",
		"build:package:plugin:integration-github:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-github build:prod",
		"build:package:plugin:integration-jira": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-jira build",
		"build:package:plugin:integration-jira:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-jira build:prod",
		"build:package:plugin:sentry": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/sentry-tracing build",
		"build:package:plugin:sentry:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/sentry-tracing build:prod",
		"build:package:plugin:jitsu-analytic": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/jitsu-analytics build",
		"build:package:plugin:jitsu-analytic:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/jitsu-analytics build:prod",
		"build:package:plugin:product-reviews": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/product-reviews build",
		"build:package:plugin:product-reviews:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/product-reviews build:prod",
		"build:package:plugin:job-search": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-search build",
		"build:package:plugin:job-search:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-search build:prod",
		"build:package:plugin:integration-ai-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-ai-ui lib:build",
		"build:package:plugin:integration-hubstaff-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-hubstaff-ui lib:build",
		"build:package:plugin:integration-github-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-github-ui lib:build",
		"build:package:plugin:integration-upwork-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-upwork-ui lib:build",
		"build:package:plugin:integration-ai-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-ai-ui lib:build:prod",
		"build:package:plugin:integration-hubstaff-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-hubstaff-ui lib:build:prod",
		"build:package:plugin:integration-github-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-github-ui lib:build:prod",
		"build:package:plugin:integration-upwork-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-upwork-ui lib:build:prod",
		"build:integration-ui-plugins": "yarn run build:package:plugin:integration-ai-ui && yarn run build:package:plugin:integration-hubstaff-ui && yarn run build:package:plugin:integration-upwork-ui && yarn run build:package:plugin:integration-github-ui",
		"build:integration-ui-plugins:prod": "yarn run build:package:plugin:integration-ai-ui:prod && yarn run build:package:plugin:integration-hubstaff-ui:prod && yarn run build:package:plugin:integration-upwork-ui:prod && yarn run build:package:plugin:integration-github-ui:prod",
		"build:package:plugin:job-employee-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-employee-ui lib:build",
		"build:package:plugin:job-employee-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-employee-ui lib:build:prod",
		"build:package:plugin:job-matching-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-matching-ui lib:build",
		"build:package:plugin:job-matching-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-matching-ui lib:build:prod",
		"build:package:plugin:job-proposal-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-proposal-ui lib:build",
		"build:package:plugin:job-proposal-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-proposal-ui lib:build:prod",
		"build:package:plugin:job-search-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-search-ui lib:build",
		"build:package:plugin:job-search-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-search-ui lib:build:prod",
		"build:package:plugin:legal-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/legal-ui lib:build",
		"build:package:plugin:legal-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/legal-ui lib:build:prod",
		"build:package:plugin:maintenance-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/maintenance-ui lib:build",
		"build:package:plugin:maintenance-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/maintenance-ui lib:build:prod",
		"build:package:plugin:onboarding-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/onboarding-ui lib:build",
		"build:package:plugin:onboarding-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/onboarding-ui lib:build:prod",
		"build:package:plugin:public-layout-ui": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/public-layout-ui lib:build",
		"build:package:plugin:public-layout-ui:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/public-layout-ui lib:build:prod",
		"build:package:plugin:job-proposal": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-proposal build",
		"build:package:plugin:job-proposal:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/job-proposal build:prod",
		"build:package:plugin:knowledge-base": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/knowledge-base build",
		"build:package:plugin:knowledge-base:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/knowledge-base build:prod",
		"build:package:plugin:changelog": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/changelog build",
		"build:package:plugin:changelog:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/changelog build:prod",
		"build:package:plugin:integration-wakatime": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-wakatime build",
		"build:package:plugin:integration-wakatime:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/plugins/integration-wakatime build:prod",
		"build:package:all": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:common-angular && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:auth && yarn run build:package:plugins:pre && yarn run build:package:core && yarn run build:package:plugins:post && yarn build:package:desktop-libs && yarn build:package:plugin:integration-wakatime && yarn build:package:desktop-ui-lib",
		"build:package:desktop-window": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/desktop-window build",
		"build:package:desktop-libs": "yarn run build:package:desktop-window && cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/desktop-libs build",
		"build:package:api": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:auth && yarn run build:package:plugins:pre && yarn run build:package:core && yarn run build:package:plugins:post",
		"build:package:api:prod": "yarn run build:package:contracts:prod && yarn run build:package:common:prod && yarn run build:package:config:prod && yarn run build:package:plugin:prod && yarn run build:package:auth:prod && yarn run build:package:plugins:pre:prod && yarn run build:package:core:prod && yarn run build:package:plugins:post:prod",
		"build:package:gauzy": "yarn run build:package:contracts && yarn run build:package:common && yarn run build:package:common-angular && yarn run build:package:config && yarn run build:package:plugin && yarn run build:package:auth && yarn run build:package:plugins:pre && yarn run build:package:core && yarn run build:package:plugins:post",
		"build:package:desktop-ui-lib": "cross-env NODE_ENV=development NODE_OPTIONS=--max-old-space-size=12288 yarn --cwd ./packages/desktop-ui-lib build",
		"copy-files-desktop": "copyfiles -f packages/core/src/**/*.gql dist/apps/desktop/data/",
		"build:desktop-timer": "cross-env NODE_ENV=production yarn copy-files-i18n-desktop-timer && yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:desktop-timer:prod && yarn run pack:desktop-timer && yarn run generate:icons:desktop-timer --environment=prod && yarn ng:prod build desktop-timer --prod --base-href ./ && yarn run prepare:desktop-timer && yarn ng:prod build api-desktop --prod --output-path=dist/apps/desktop-timer/desktop-api && yarn run copy-assets-gauzy-timer",
		"prepare:desktop-timer": "yarn run postinstall.electron && tsc -p apps/desktop-timer/tsconfig.json",
		"build:desktop-timer:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --project dist/apps/desktop-timer",
		"build:desktop-timer:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/desktop-timer",
		"build:desktop-timer:mac:quick": "yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --config -c.mac.identity=null --project dist/apps/desktop-timer",
		"build:desktop-timer:mac": "yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --project dist/apps/desktop-timer",
		"build:desktop-timer:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:linux:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:windows:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/desktop-timer",
		"build:desktop-timer:mac:release": "yarn run build:desktop-timer && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --publish=always --project dist/apps/desktop-timer",
		"copy-assets-gauzy": "copyfiles -f apps/desktop/src/assets/snapshot-sound.wav dist/apps/desktop/data/sound/",
		"copy-assets-gauzy-timer": "copyfiles -f apps/desktop/src/assets/snapshot-sound.wav dist/apps/desktop-timer/data/sound/",
		"config:electron": "yarn ts-node ./.scripts/electron.env.ts",
		"config:server:prod": "yarn run config:electron -- --environment=prod --desktop=server",
		"config:desktop:prod": "yarn run config:electron -- --environment=prod --desktop=desktop",
		"config:desktop-timer:prod": "yarn run config:electron -- --environment=prod --desktop=desktop-timer",
		"prepare:gauzy-server": "yarn run postinstall.electron && tsc -p apps/server/tsconfig.json",
		"build:gauzy-server": "cross-env NODE_ENV=production yarn run copy-files-i18n-server && yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:server:prod && yarn run pack:server && yarn run generate:icons:server --environment=prod && yarn ng:prod build gauzy-server --prod --base-href ./ && yarn run prepare:gauzy-server && yarn ng:prod build gauzy-server-ui --prod --base-href ./ && yarn ng:prod build gauzy-server-api --prod && yarn run copy-files-gauzy-server",
		"copy-files-gauzy-server": "copyfiles -f packages/core/src/**/*.gql dist/apps/gauzy-server/data/",
		"build:gauzy-server:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/gauzy-server",
		"build:gauzy-server:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --project dist/apps/gauzy-server",
		"build:gauzy-server:mac": "yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --project dist/apps/gauzy-server",
		"build:gauzy-server:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/gauzy-server",
		"build:gauzy-server:windows:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/gauzy-server",
		"build:gauzy-server:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/gauzy-server",
		"build:gauzy-server:linux:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/gauzy-server",
		"build:gauzy-server:mac:release": "yarn run build:gauzy-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --publish=always --project dist/apps/gauzy-server",
		"quick:build:gauzy-server": "yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --mac --project dist/apps/gauzy-server",
		"copy-files-i18n-desktop-timer": "yarn run download:translations --desktop=desktop-timer",
		"copy-files-i18n-desktop": "yarn run download:translations --desktop=desktop",
		"copy-files-i18n-server": "yarn run download:translations --desktop=server",
		"generate:icons": "yarn ts-node .scripts/icon-utils/icon-factory.ts",
		"generate:icons:desktop-timer": "yarn run generate:icons --desktop=desktop-timer",
		"generate:icons:desktop": "yarn run generate:icons --desktop=desktop",
		"generate:icons:server": "yarn run generate:icons --desktop=server",
		"pack": "yarn ts-node .scripts/electron-package-utils/package-util.ts",
		"pack:desktop-timer": "yarn run pack --desktop=desktop-timer",
		"pack:desktop": "yarn run pack --desktop=desktop",
		"pack:server": "yarn run pack --desktop=server",
		"download:translations": "yarn ts-node .scripts/translation/translation-util.ts",
		"config:api-server:prod": "yarn run config:electron -- --environment=prod --desktop=server-api",
		"prepare:gauzy-api-server": "yarn run postinstall.electron && tsc -p apps/server-api/tsconfig.json",
		"build:gauzy-api-server": "cross-env NODE_ENV=production yarn run copy-files-i18n-api-server && yarn run postinstall.electron && yarn build:package:all && yarn run config:prod && yarn run config:api-server:prod && yarn run pack:api-server && yarn run generate:icons:server-api --environment=prod && yarn ng:prod build gauzy-api-server --prod --base-href ./ && yarn run prepare:gauzy-api-server && yarn ng:prod build server-api --prod && yarn run copy-files-gauzy-api-server",
		"copy-files-gauzy-api-server": "copyfiles -f packages/core/src/**/*.gql dist/apps/gauzy-api-server/data/",
		"build:gauzy-api-server:windows": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:linux": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:mac": "yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:windows:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --windows --publish=always --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:linux:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn run config:prod && yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --linux --publish=always --project dist/apps/gauzy-api-server",
		"build:gauzy-api-server:mac:release": "yarn run build:gauzy-api-server && npm config set cache .cache && yarn electron-builder -c.electronVersion=30.0.1 build --mac --publish=always --project dist/apps/gauzy-api-server",
		"copy-files-i18n-api-server": "yarn run download:translations --desktop=server-api",
		"quick:build:gauzy-api-server": "yarn electron-builder -c.electronVersion=30.0.1 -c.extraMetadata.author.name=Ever build --mac --project dist/apps/gauzy-api-server",
		"generate:icons:server-api": "yarn run generate:icons --desktop=server-api",
		"pack:api-server": "yarn run pack --desktop=gauzy-api-server"
	},
	"config": {
		"commitizen": {
			"path": "cz-conventional-changelog"
		}
	},
	"commitlint": {
		"extends": [
			"@commitlint/config-conventional"
		]
	},
	"husky": {
		"hooks": {
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
			"pre-commit": "pretty-quick --no-verify --staged"
		}
	},
	"lint-staged": {},
	"release": {
		"verifyConditions": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git",
			"@semantic-release/github"
		],
		"prepare": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git"
		],
		"publish": [
			"@semantic-release/github"
		],
		"generateNotes": {
			"preset": "angular"
		},
		"npmPublish": false
	},
	"workspaces": {
		"packages": [
			"libs/*",
			"apps/*",
			"tools",
			"packages/*",
			"packages/plugins/*"
		],
		"nohoist": [
			"**/@types/jasmine",
			"**/@types/jasminewd2",
			"**/@angular*/**",
			"**/@ngtools/**"
		]
	},
	"resolutions": {
		"@angular-devkit/architect": "^0.1701.4",
		"@angular-devkit/build-angular": "^17.1.4",
		"@angular-devkit/core": "^17.1.4",
		"camelcase": "^6.3.0",
		"rxjs": "^7.4.0",
		"autoprefixer": "10.4.18",
		"locutus": "^2.0.30"
	},
	"dependencies": {
		"@angular/animations": "^17.1.3",
		"@angular/cdk": "^17.1.2",
		"@angular/common": "^17.1.3",
		"@angular/compiler": "^17.1.3",
		"@angular/core": "^17.1.3",
		"@angular/forms": "^17.1.3",
		"@angular/language-service": "^17.1.3",
		"@angular/material": "^17.1.2",
		"@angular/platform-browser": "^17.1.3",
		"@angular/platform-browser-dynamic": "^17.1.3",
		"@angular/router": "^17.1.3",
		"@angular/service-worker": "^17.1.3",
		"@nebular/auth": "^13.0.0",
		"@nebular/bootstrap": "^9.1.0-rc.6",
		"@nebular/eva-icons": "^13.0.0",
		"@nebular/security": "^13.0.0",
		"@nebular/theme": "^13.0.0",
		"@ng-select/ng-select": "^11.2.0",
		"angular2-smart-table": "^3.3.0",
		"autoprefixer": "10.4.18",
		"bcrypt": "^5.1.1",
		"camelcase": "^6.3.0",
		"dotenv": "^16.0.3",
		"jsdom": "^23.0.1",
		"lodash-es": "^4.17.21",
		"parse5": "^7.1.2",
		"rxjs": "^7.4.0",
		"tslib": "^2.6.2",
		"yargs": "^17.5.0",
		"zone.js": "0.14.8"
	},
	"devDependencies": {
		"@angular-builders/custom-webpack": "^16.0.1",
		"@angular-devkit/architect": "^0.1701.4",
		"@angular-devkit/build-angular": "^17.1.4",
		"@angular-devkit/core": "^17.1.4",
		"@angular-devkit/schematics": "17.1.4",
		"@angular-eslint/eslint-plugin": "^16.2.0",
		"@angular-eslint/eslint-plugin-template": "^16.2.0",
		"@angular-eslint/template-parser": "~16.0.0",
		"@angular/cli": "~17.0.0",
		"@angular/compiler-cli": "^17.1.3",
		"@commitlint/cli": "^17.6.6",
		"@commitlint/config-conventional": "^17.6.6",
		"@commitlint/config-lerna-scopes": "^17.6.6",
		"@commitlint/travis-cli": "^17.6.6",
		"@compodoc/compodoc": "^1.1.19",
		"@cypress/browserify-preprocessor": "^3.0.2",
		"@electron/remote": "^2.0.8",
		"@nstudio/angular": "^17.0.1",
		"@nstudio/electron": "^17.0.1",
		"@nstudio/electron-angular": "^17.0.1",
		"@nstudio/web": "^17.0.1",
		"@nstudio/web-angular": "^17.0.1",
		"@nstudio/xplat": "^17.0.1",
		"@nx/angular": "17.3.2",
		"@nx/cypress": "17.3.2",
		"@nx/eslint-plugin": "17.3.2",
		"@nx/jest": "17.3.2",
		"@nx/js": "17.3.2",
		"@nx/nest": "17.3.2",
		"@nx/node": "17.3.2",
		"@nx/workspace": "17.3.2",
		"@schematics/angular": "17.1.4",
		"@semantic-release/changelog": "^6.0.3",
		"@semantic-release/git": "^10.0.1",
		"@semantic-release/github": "^9.2.6",
		"@semantic-release/npm": "^11.0.0",
		"@types/bcrypt": "^5.0.2",
		"@types/jest": "^29.4.4",
		"@types/jsdom": "^21.1.6",
		"@types/node": "^18.16.9",
		"@types/webpack": "^5.28.5",
		"@types/yargs": "^15.0.9",
		"ajv-formats": "^2.1.1",
		"cloc": "^2.7.0",
		"codecov": "^3.8.3",
		"codelyzer": "^6.0.1",
		"commitizen": "^4.2.1",
		"concurrently": "^5.3.0",
		"conventional-changelog": "^3.1.23",
		"conventional-changelog-cli": "^2.1.0",
		"copy-webpack-plugin": "^9.0.1",
		"cross-env": "^7.0.3",
		"cspell": "^6.18.1",
		"cypress": "^9.4.1",
		"cypress-cucumber-preprocessor": "^4.3.1",
		"cypress-file-upload": "^5.0.8",
		"cz-conventional-changelog": "^3.3.0",
		"electron": "^30.0.1",
		"electron-builder": "^24.13.3",
		"envalid": "^6.0.2",
		"esbuild": "0.19.2",
		"eslint-plugin-cypress": "2.13.4",
		"fork-ts-checker-webpack-plugin": "^5.2.0",
		"gulp-tag-version": "^1.3.1",
		"husky": "^6.0.0",
		"jest": "^29.7.0",
		"jest-environment-jsdom": "29.7.0",
		"jest-jasmine2": "29.4.3",
		"jest-preset-angular": "13.1.6",
		"jsonc-eslint-parser": "^2.1.0",
		"lerna": "^4.0.0",
		"lerna-changelog": "^1.0.1",
		"lighthouse": "^6.3.0",
		"lint-staged": "^10.4.0",
		"ng-packagr": "17.1.2",
		"node-gyp": "^10.2.0",
		"npm-run-all": "^4.1.5",
		"nx": "17.3.2",
		"pkg": "^5.3.0",
		"png-to-ico": "^2.1.8",
		"postcss": "^8.4.5",
		"postcss-import": "~14.1.0",
		"postcss-preset-env": "~7.5.0",
		"postcss-url": "~10.1.3",
		"prettier": "^2.8.4",
		"prettier-tslint": "^0.4.2",
		"pretty-quick": "^3.1.0",
		"protractor": "^7.0.0",
		"rimraf": "^3.0.2",
		"semantic-release": "^22.0.12",
		"simple-git": "^3.20.0",
		"stylelint": "^15.10.1",
		"ts-jest": "29.1.1",
		"ts-loader": "^8.0.4",
		"ts-node": "^10.9.2",
		"tsconfig-paths": "^3.9.0",
		"tslint": "^6.1.3",
		"tslint-config-prettier": "^1.18.0",
		"tslint-language-service": "^0.9.9",
		"typedoc": "^0.23.24",
		"typescript": "5.3.3",
		"webpack": "^5.91.0",
		"webpack-bundle-analyzer": "^4.10.2",
		"webpack-cli": "^4.9.0",
		"webpack-merge": "^5.10.0",
		"webpack-node-externals": "^3.0.0",
		"@nx/eslint": "17.3.2"
	},
	"overrides": {
		"prebuild": {
			"node-gyp": "$node-gyp"
		},
		"twing": {
			"locutus": "2.0.30"
		}
	},
	"engines": {
		"node": ">=20.11.1",
		"yarn": ">=1.22.19"
	},
	"prettier": {
		"printWidth": 120,
		"singleQuote": true,
		"semi": true,
		"useTabs": true,
		"tabWidth": 4,
		"arrowParens": "always",
		"trailingComma": "none",
		"quoteProps": "as-needed",
		"trimTrailingWhitespace": true,
		"overrides": [
			{
				"files": "*.scss",
				"options": {
					"useTabs": false,
					"tabWidth": 2
				}
			},
			{
				"files": "*.yml",
				"options": {
					"useTabs": false,
					"tabWidth": 2
				}
			}
		]
	},
	"snyk": true,
	"xplat": {
		"prefix": "gauzy",
		"framework": "angular"
	}
}
