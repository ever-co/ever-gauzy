version: '3.7'

services:
    nginx:
        image: nginx:latest
        container_name: production_nginx
        volumes:
            - .deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
            - .deploy/nginx/log/:/etc/nginx/logs
            - .deploy/nginx/cache/:/etc/nginx/cache
            - /etc/letsencrypt/:/etc/letsencrypt/
        ports:
            - '8080:8080'
        depends_on:
            - api
            - webapp
        links:
            - api:${API_HOST:-api}
            - webapp:${HOST:-webapp}
        networks:
            - overlay

    db:
        image: postgres:11-alpine
        container_name: db
        restart: always
        environment:
            POSTGRES_DB: ${DB_NAME:-postgres}
            POSTGRES_USER: ${DB_USER:-postgres}
            POSTGRES_PASSWORD: ${DB_PASS:-root}
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'psql postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@localhost:5432/$${POSTGRES_DB} || exit 1',
                ]
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        networks:
            - overlay

    pgweb:
        image: sosedoff/pgweb
        container_name: pgweb
        restart: always
        depends_on:
            - db
        links:
            - db:${DB_HOST:-db}
        environment:
            POSTGRES_DB: ${DB_NAME:-postgres}
            POSTGRES_USER: ${DB_USER:-postgres}
            POSTGRES_PASSWORD: ${DB_PASS:-root}
            DATABASE_URL: postgres://${DB_USER:-postgres}:${DB_PASS:-root}@${DB_HOST:-db}:${DB_PORT:-5432}/${DB_NAME:-postgres}?sslmode=disable
        ports:
            - '8081:8081'
        networks:
            - overlay

    franchise:
        image: binakot/franchise
        container_name: franchise
        restart: always
        depends_on:
            - db
        links:
            - db:${DB_HOST:-db}
        environment:
            PGHOST: ${DB_HOST:-db}
            PGDATABASE: ${DB_NAME:-postgres}
            PGUSER: ${DB_USER:-postgres}
            PGPASSWORD: ${DB_PASS:-root}
            PGPORT: ${DB_PORT:-5432}
        ports:
            - '8082:80'
            - '14645:14645'
        networks:
            - overlay

    omnidb:
        image: taivokasper/omnidb
        container_name: omnidb
        restart: always
        depends_on:
            - db
        links:
            - db:${DB_HOST:-db}
        ports:
            - '8083:8080'
            - '25482:25482'
        networks:
            - overlay

    adminer:
        image: adminer
        container_name: adminer
        restart: always
        depends_on:
            - db
        links:
            - db:${DB_HOST:-db}
        environment:
            ADMINER_DEFAULT_DB_DRIVER: pgsql
            ADMINER_DEFAULT_DB_HOST: ${DB_HOST:-db}
            ADMINER_DEFAULT_DB_NAME: ${DB_NAME:-postgres}
            ADMINER_DEFAULT_DB_PASSWORD: ${DB_PASS:-root}
        ports:
            - '8084:8080'
        networks:
            - overlay

    api:
        container_name: api
        image: docker.pkg.github.com/ever-co/gauzy/gauzy-api:latest
        environment:
            NODE_ENV: ${NODE_ENV:-development}
            DB_HOST: db
        env_file:
            - .env
        restart: on-failure
        depends_on:
            - db
        links:
            - db:${DB_HOST:-db}
        volumes:
            - webapp_node_modules:/srv/gauzy/node_modules
            - api_node_modules:/srv/gauzy/apps/api/node_modules
        ports:
            - 3000:3000:${API_PORT:-3000}
        networks:
            - overlay

    webapp:
        container_name: webapp
        image: docker.pkg.github.com/ever-co/gauzy/gauzy-webapp:latest
        environment:
            NODE_ENV: ${NODE_ENV:-development}
        env_file:
            - .env
        restart: on-failure
        links:
            - db:${DB_HOST:-db}
            - api:${API_HOST:-api}
        depends_on:
            - db
            - api
        volumes:
            - webapp_node_modules:/srv/gauzy/node_modules
        ports:
            - 4200:${HOST:-4200}
        networks:
            - overlay

volumes:
    webapp_node_modules:
    api_node_modules:
    postgres_data:
    certificates:

networks:
    overlay:
        driver: bridge
