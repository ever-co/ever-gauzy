name: Deploy to DigitalOcean Droplet Prod

on:
  workflow_run:
    workflows: ['Deploy to DigitalOcean Droplet Prod Pre']
    branches: [droplets]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest  # Changed to GitHub's default runner

    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use SSH key from previous workflow
        run: |
          echo "${{ secrets.DO_DROPLET_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host *" > ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Modify API_BASE_URL
        run: |
          echo "INGRESS_CERT_TYPE=${{ env.INGRESS_CERT_TYPE }}" >> $GITHUB_ENV

          if [ "${{ env.INGRESS_CERT_TYPE }}" = "cloudflare" ]; then
            echo "API_BASE_URL=https://apidt.gauzy.co" >> $GITHUB_ENV
          elif [ "${{ env.INGRESS_CERT_TYPE }}" = "letsencrypt" ]; then
            echo "API_BASE_URL=https://apidts.gauzy.co" >> $GITHUB_ENV
          else
            echo "UNKNOWN INGRESS_CERT_TYPE"
          fi
        env:
          INGRESS_CERT_TYPE: 'cloudflare'

      - name: Inject secrets into .env-template.compose
        run: |
          if [ "${{ env.INGRESS_CERT_TYPE }}" = "cloudflare" ]; then
            envsubst < $GITHUB_WORKSPACE/.deploy/ssh/with-cloudflare/prod/docker-compose.api.prod.template.yml > temp.yaml && mv temp.yaml $GITHUB_WORKSPACE/.deploy/ssh/with-cloudflare/prod/docker-compose.api.prod.yml
            touch $GITHUB_WORKSPACE/.deploy/ssh/with-letsencrypt/prod/docker-compose.api.prod.yml
          elif [ "${{ env.INGRESS_CERT_TYPE }}" = "letsencrypt" ]; then
            envsubst < $GITHUB_WORKSPACE/.deploy/ssh/with-letsencrypt/prod/docker-compose.api.prod.template.yml > temp.yaml && mv temp.yaml $GITHUB_WORKSPACE/.deploy/ssh/with-letsencrypt/prod/docker-compose.api.prod.yml
            touch $GITHUB_WORKSPACE/.deploy/ssh/with-cloudflare/prod/docker-compose.api.prod.yml
          else
            echo "UNKNOWN INGRESS_CERT_TYPE"
          fi
        env:
          API_BASE_URL: '${{ env.API_BASE_URL }}'
          # Include other environment variables from your workflow

      - name: Copy file via SCP
        run: |
          if [ "${{ env.INGRESS_CERT_TYPE }}" = "cloudflare" ]; then
            scp $GITHUB_WORKSPACE/.deploy/ssh/with-cloudflare/prod/docker-compose.api.prod.yml \
                ${{ secrets.DO_DROPLET_USERNAME }}@${{ secrets.DO_DROPLET_PROD_HOST }}:~
          elif [ "${{ env.INGRESS_CERT_TYPE }}" = "letsencrypt" ]; then
            scp $GITHUB_WORKSPACE/.deploy/ssh/with-letsencrypt/prod/docker-compose.api.prod.yml \
                ${{ secrets.DO_DROPLET_USERNAME }}@${{ secrets.DO_DROPLET_PROD_HOST }}:~
          else
            echo "Unknown INGRESS_CERT_TYPE: $INGRESS_CERT_TYPE"
            exit 1
          fi

      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh ${{ secrets.DO_DROPLET_USERNAME }}@${{ secrets.DO_DROPLET_PROD_HOST }} << 'EOF'
            if [ "${INGRESS_CERT_TYPE}" = "cloudflare" ]; then
              docker-compose -f docker-compose.api.prod.yml down
              docker-compose -f docker-compose.api.prod.yml up -d
            elif [ "${INGRESS_CERT_TYPE}" = "letsencrypt" ]; then
              docker-compose -f docker-compose.api.prod.yml down
              docker-compose -f docker-compose.api.prod.yml up -d
            else
              echo "Unknown INGRESS_CERT_TYPE: $INGRESS_CERT_TYPE"
              exit 1
            fi
          EOF
